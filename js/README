Parts of this code are shared between:

1. blksc3 block editor (.xml format)
2. jssc3 plain text editor (.text format)
3. jssc3 rich text editor (.html format)

The common editor operations are:

1. editor_get_js_notation_and_then(proc), to fetch the .js notation that is to be compiled and call proc
2. editor_get_data(), to fetch the storable data from the editor (.xml or .text or .html)
3. editor_set_data(programData), to load stored data into the editor (.xml or .text or .html)

For text editors there is also a _text_editor_get_text_ function to get the currently selected text.

In addition some text editor contexts allow a translation stage, from .stc notation to .js notation.
This translation is handled prior to editor_get_js_notation_and_then(), which returns .js notation.
The variable notation_format says which format the user notation is in.

There are also functions that must be implemented for each mode of communicating with scsynth.

1. Binary Osc packets sent to web assembly scsynth instance using Osc driver or to ordinary scsynth process over websocket
2. Stc program text sent to SuperCollider (sclang) or Smalltalk (stsc3) over websocket.

The common synthesis operations are:

1. playUgen, play a unit generator, implicitly add Out
2. reset, remove all synthesis nodes

C.f.

1. print, print unit generator sequence
2. draw, draw unit generator graph
